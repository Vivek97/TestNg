<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="4" total="14" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="150" started-at="2018-01-04T11:03:12Z" finished-at="2018-01-04T11:03:12Z">
    <groups>
      <group name="checkintest">
        <method signature="Test1.testMethod1()[pri:0, instance:test.Test1@51081592]" name="testMethod1" class="test.Test1"/>
        <method signature="Test1.testMethod2()[pri:0, instance:test.Test1@51081592]" name="testMethod2" class="test.Test1"/>
      </group> <!-- checkintest -->
      <group name="functest">
        <method signature="Test1.testMethod1()[pri:0, instance:test.Test1@51081592]" name="testMethod1" class="test.Test1"/>
        <method signature="Test1.testMethod2()[pri:0, instance:test.Test1@51081592]" name="testMethod2" class="test.Test1"/>
        <method signature="Test1.testMethod3()[pri:0, instance:test.Test1@51081592]" name="testMethod3" class="test.Test1"/>
      </group> <!-- functest -->
    </groups>
    <test name="TestGroup" duration-ms="32" started-at="2018-01-04T11:03:12Z" finished-at="2018-01-04T11:03:12Z">
      <class name="test.Test1">
        <test-method status="PASS" signature="testMethod1()[pri:0, instance:test.Test1@51081592]" name="testMethod1" duration-ms="6" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method status="PASS" signature="testMethod2()[pri:0, instance:test.Test1@51081592]" name="testMethod2" duration-ms="2" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method status="PASS" signature="testMethod3()[pri:0, instance:test.Test1@51081592]" name="testMethod3" duration-ms="2" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
      </class> <!-- test.Test1 -->
    </test> <!-- TestGroup -->
    <test name="Test" duration-ms="56" started-at="2018-01-04T11:03:12Z" finished-at="2018-01-04T11:03:12Z">
      <class name="test.SampleTestClassOne2">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.SampleTestClassOne2@1d057a39]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="ClassOneTestOne2()[pri:0, instance:test.SampleTestClassOne2@1d057a39]" name="ClassOneTestOne2" duration-ms="4" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassOneTestOne2 -->
        <test-method status="PASS" signature="ClassOneTestThree2()[pri:0, instance:test.SampleTestClassOne2@1d057a39]" name="ClassOneTestThree2" duration-ms="3" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassOneTestThree2 -->
        <test-method status="FAIL" signature="ClassOneTestTwo2()[pri:0, instance:test.SampleTestClassOne2@1d057a39]" name="ClassOneTestTwo2" duration-ms="2" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.fail(Assert.java:100)
	at test.SampleTestClassOne2.ClassOneTestTwo2(SampleTestClassOne2.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassOneTestTwo2 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.SampleTestClassOne2@1d057a39]" name="afterClass" is-config="true" duration-ms="1" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.SampleTestClassOne2 -->
      <class name="test.SampleTestClassOne">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:test.SampleTestClassOne@26be92ad]" name="beforeSuite" is-config="true" duration-ms="13" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:test.SampleTestClassOne2@1d057a39]" name="beforeSuite" is-config="true" duration-ms="1" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test.SampleTestClassOne@26be92ad]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test.SampleTestClassOne2@1d057a39]" name="beforeTest" is-config="true" duration-ms="1" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.SampleTestClassOne@26be92ad]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="ClassOneTestOne()[pri:0, instance:test.SampleTestClassOne@26be92ad]" name="ClassOneTestOne" duration-ms="5" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassOneTestOne -->
        <test-method status="PASS" signature="ClassOneTestThree()[pri:0, instance:test.SampleTestClassOne@26be92ad]" name="ClassOneTestThree" duration-ms="2" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassOneTestThree -->
        <test-method status="FAIL" signature="ClassOneTestTwo()[pri:0, instance:test.SampleTestClassOne@26be92ad]" name="ClassOneTestTwo" duration-ms="2" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.fail(Assert.java:100)
	at test.SampleTestClassOne.ClassOneTestTwo(SampleTestClassOne.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassOneTestTwo -->
        <test-method status="PASS" signature="testSingleString(java.lang.String)[pri:0, instance:test.SampleTestClassOne@26be92ad]" name="testSingleString" duration-ms="2" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Cedric]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleString -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.SampleTestClassOne@26be92ad]" name="afterClass" is-config="true" duration-ms="1" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.SampleTestClassOne@26be92ad]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.SampleTestClassOne2@1d057a39]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:test.SampleTestClassOne2@1d057a39]" name="afterSuite" is-config="true" duration-ms="1" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:test.SampleTestClassOne@26be92ad]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-01-04T16:33:12Z" finished-at="2018-01-04T16:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.SampleTestClassOne -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
